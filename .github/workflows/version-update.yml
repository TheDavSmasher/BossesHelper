name: Update latest Release Version

on:
  workflow_dispatch:
    inputs:
      update:
        description: 'Type of update'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch
        default: patch

jobs:
  version_update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v5
      
    - name: Checkout Wiki
      uses: actions/checkout@v5
      with:
        repository: ${{ github.repository }}.wiki
        token: ${{ secrets.ADDON_WIKI_PAT }}
        path: wiki

    - name: Configure Git
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

    - name: Get last version
      id: last_version
      run: |
          VERSION=$(yq -r '.[0].Version' everest.yaml)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
    
    - name: Get new version
      id: new_version
      run: |
        IFS='.' read -r major minor patch <<< "${{ steps.last_version.outputs.version }}"

        case "${{ inputs.update }}" in
          major) major=$((major + 1)); minor=0; patch=0 ;;
          minor) minor=$((minor + 1)); patch=0 ;;
          patch) patch=$((patch + 1)) ;;
        esac

        new_version="${major}.${minor}.${patch}"
        echo "new_version=$new_version" >> "$GITHUB_OUTPUT"

    - name: Update everest.yaml version
      run: |
        yq -i ".[0].Version = \"${{ steps.new_version.outputs.new_version }}\"" everest.yaml
    
    - name: Update README and Wiki Home
      run: |
        for file in README.md wiki/Home.md; do
          if [ -f "$file" ]; then
            sed -i "s/\`${{ steps.last_version.outputs.version }}\`/\`${{ steps.new_version.outputs.new_version }}\`" "$file"
          fi
        done
    
    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git commit -am "[chore] Updated to ${{ steps.new_version.outputs.new_version }}"
        git push

    - name: Commit and push to Wiki
      run: |
        cd wiki
        git commit -am "[chore] Updated to ${{ steps.new_version.outputs.new_version }}"
        git push